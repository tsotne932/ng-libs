{"version":3,"file":"msda-storage.js","sources":["../../../projects/msda-storage/src/lib/msda-storage.service.ts","../../../projects/msda-storage/src/lib/msda-storage.module.ts","../../../projects/msda-storage/src/public-api.ts","../../../projects/msda-storage/src/msda-storage.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\nconst KEYS = {\n  i18n: 'i18n',\n  token: 'session-token',\n  lang: 'lang',\n  clientId: 'clientId',\n  appVersions: 'appVersions'\n}\n\n@Injectable()\nexport class MsdaStorage {\n  applicationAbbrs: string[] = [];\n  private _clientId?: number | null;\n  private _token?: string | null = '';\n  private _apiPrefix: string = '/api';\n  constructor(private _httpClient: HttpClient) { }\n\n  /**\n   * Load Translations with App abbreviations\n   * @param {String} appKeywords[]\n   * @param {String} prefix optional parameter\n   */\n  async loadTranslations(appKeywords: string[]) {\n    if (appKeywords && appKeywords.length) {\n      this.applicationAbbrs = appKeywords;\n      this._checkTranslationVersions();\n    }\n  }\n\n  /**\n   * set clientId to storage\n   * @param {number} clientId\n   */\n  async setClientId(clientId: number | null, setInSession?: boolean) {\n    if (setInSession) {\n      try {\n        await this._setSessionClient(clientId).toPromise();\n        return { success: this._setClientId(clientId) };\n      } catch (error) {\n        return { success: false, error };\n      }\n    }\n    return { success: this._setClientId(clientId) };\n  }\n\n  get clientId() {\n    return this._getClientId();\n  }\n\n  /**\n   * remove clientId\n   * @param {number} clientId\n   */\n  public removeClientId() {\n    this.setClientId(null);\n  }\n\n  private _setClientId(clientId: number | null) {\n    this._clientId = clientId;\n    if (clientId)\n      localStorage.setItem(KEYS.clientId, clientId.toString());\n    else localStorage.removeItem(KEYS.clientId);\n    return true;\n  }\n\n  private _getClientId() {\n    try {\n      this._clientId = Number(localStorage.getItem(KEYS.clientId));\n      return this._clientId;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n\n  /**\n   * set lang to storage\n   * @param {string} lang\n   */\n  setLang(lang: string) {\n    this._setLang(lang);\n  }\n  /**\n   *  get lang\n   */\n  public static get lang() {\n    return localStorage.getItem(KEYS.lang);\n  }\n\n  private _setLang(lang: string | null) {\n    if (lang)\n      localStorage.setItem(KEYS.lang, lang);\n    else localStorage.removeItem(KEYS.lang);\n  }\n\n  private _getLang() {\n    return localStorage.getItem(KEYS.lang);\n  }\n\n  /**\n   * common set item\n   * @param {string} key\n   * @param {string} value\n   */\n  public setItem(key: string, value: string) {\n    localStorage.setItem(key, value);\n  }\n  /**\n   * common get item\n   * @param {string} key\n   */\n  public getItem(key: string) {\n    return localStorage.getItem(key);\n  }\n  /**\n   * common remove item\n   * @param {string} key\n   */\n  public removeItem(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  /**\n   * set session-token\n   * @param {string} value\n   */\n  public setToken(value: string) {\n    this._token = value;\n    localStorage.setItem(KEYS.token, value);\n  }\n  /**\n   *  get token\n   * @param {string} key\n   */\n  static get token() {\n    return localStorage.getItem(KEYS.token);\n  }\n  /**\n   *  remove token\n   * @param {string} key\n   */\n  public removeToken() {\n    localStorage.removeItem(KEYS.token);\n    this._token = null;\n  }\n\n  /**\n   *  set appVersion\n   * @param {MsdaAppVersions} versions\n   */\n  public setAppVersion(versions: MsdaAppVersions) {\n    const current = { ...this.versions, ...versions };\n    localStorage.setItem(KEYS.appVersions, JSON.stringify(current))\n    return this.versions;\n  }\n\n  /**\n   *  get appVersions\n   */\n  get appVersions() {\n    return this.versions;\n  }\n\n  public _setSessionClient(clientId: number | null) {\n    return this._httpClient.post<MsdaResponse<any>>(`${this._apiPrefix}/um/v3/user/session/client`, { data: { clientId } });\n  }\n\n\n\n\n  //translations\n\n  private async _checkTranslationVersions() {\n    const versions = await this._getRemoteTranslationVersions();\n    if (versions) {\n      const i18n = this._getLocalTranslationVersions();\n      const appsTranslationsToUpdate: AppTranlationVersion = this._getOutDatedAppKeywords(versions, i18n);\n      const updatedAppTranslations = await this._getTranslations(appsTranslationsToUpdate);\n      this._updateInStorage(updatedAppTranslations);\n    }\n  }\n\n  private async _getRemoteTranslationVersions(): Promise<AppTranlationVersion | null> {\n    try {\n      const { result: { data } } = await this._httpClient.get<MsdaResponse<AppTranlationVersion>>(`${this._apiPrefix}/translations/versions`).toPromise();\n      return data;\n    } catch (err) {\n      return null;\n    }\n  }\n\n  private _getLocalTranslationVersions() {\n    try {\n      return JSON.parse(localStorage.getItem(KEYS.i18n) || '{}');\n    } catch (error) {\n      console.error(error);\n      return {}\n    }\n  }\n\n  private _getOutDatedAppKeywords(versions: AppTranlationVersion, i18n: MsdaI18n): AppTranlationVersion {\n    const outDated: AppTranlationVersion = {};\n    this.applicationAbbrs.forEach(abbr => {\n      if (!i18n[abbr] || i18n[abbr].version < versions[abbr]) {\n        outDated[abbr] = versions[abbr]\n      }\n    });\n\n    return outDated;\n  }\n\n  private async _getTranslations(applications: AppTranlationVersion): Promise<MsdaI18n> {\n    const updatedTranslations: MsdaI18n = {};\n    await Promise.all(Object.keys(applications).map(async application => {\n      try {\n        const { result: { data } } = await this._httpClient.post<MsdaResponse<OriginalTranslation[]>>(`${this._apiPrefix}/translations`, { data: { applications: [application] } }).toPromise();\n        const keywords = this._transformTranslations(data);\n        updatedTranslations[application] = {\n          version: applications[application],\n          keywords: keywords\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }));\n    return updatedTranslations;\n  }\n\n  private _transformTranslations(translations: OriginalTranslation[]): Translations {\n    const translationObject: Translations = {};\n\n    translations.forEach(translation => {\n      translationObject[translation.keyword] = translation.translations;\n    })\n\n    return translationObject;\n  }\n\n  private _updateInStorage(newData: MsdaI18n) {\n    try {\n      const oldData = this._getLocalTranslationVersions();\n      const toSave = {\n        ...oldData,\n        ...newData\n      }\n      localStorage.setItem(KEYS.i18n, JSON.stringify(toSave));\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  public get translations() {\n    return this._getLocalTranslationVersions();\n  }\n\n\n  public get versions() {\n    try {\n      return JSON.parse(localStorage.getItem(KEYS.appVersions) || '{}')\n    } catch (error) {\n      console.error(error);\n      return {}\n    }\n  }\n\n  /**\n   * set config\n   * @param {Config} config  set apiConfig \n   */\n  public setConfig(config: Config){\n    this._apiPrefix = config.apiPrefix\n  }\n}\n\n\n\nexport interface Config{\n  apiPrefix:string;\n}\nexport interface MsdaAppVersions {\n  [x: string]: MsdaAppVersionItem\n}\n\n\nexport interface MsdaAppVersionItem {\n  build: number,\n  version: string\n}\n\n\n\nexport interface MsdaResponse<T> {\n  result: {\n    data: T\n  }\n}\n\nexport interface AppTranlationVersion {\n  [x: string]: number;\n}\n\nexport interface Translations {\n  [x: string]: {\n    ge: string;\n    en: string;\n  };\n}\nexport interface MsdaI18n {\n  [x: string]: {\n    version: number;\n    keywords: Translations\n  };\n}\n\nexport interface OriginalTranslation {\n  keyword: string;\n  translations: {\n    ge: string;\n    en: string;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport {  ModuleWithProviders, NgModule } from '@angular/core';\nimport { MsdaStorage } from './msda-storage.service';\n\nexport interface StorageConfig {\n  prefix?: string;\n}\n\n@NgModule({\n  declarations: [],\n  imports: [\n    HttpClientModule,\n    CommonModule\n  ],\n  exports: [],\n  providers:[MsdaStorage]\n})\nexport class MsdaStorageModule {}\n","/*\n * Public API Surface of msda-storage\n */\n\nexport * from './lib/msda-storage.service';\nexport * from './lib/msda-storage.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}